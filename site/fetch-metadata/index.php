<?php
declare(strict_types = 1);

namespace FetchMetadata;

use Random\Randomizer;

require_once __DIR__ . '/functions.php';
require_once __DIR__ . '/../functions.php';
?>
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Fetch Metadata (Sec-Fetch-Dest etc.) Demo</title>
	<meta name="description" content="Fetch Metadata (Sec-Fetch-Dest etc.) demo page where you can see what Sec-Fetch-* headers your browser sends and when.">
	<link rel="stylesheet" href="style.css">
</head>
<body>
<h1>Fetch Metadata request headers</h1>
<p>
	<strong>Fetch Metadata</strong> is a set of several HTTP request headers that provide additional context to the server
	about what the browser is going to do with the response, where the request has originated, and whether the request was user-activated.
	Based on these headers, the server may for example implement extra access control and similar.
</p>
<dl>
	<dt><code>Sec-Fetch-Dest</code></dt>
	<dd>Contains a request <em>destination</em>, tells the server what the browser is going to do with the response</dd>
	<dt><code>Sec-Fetch-Mode</code></dt>
	<dd>Which request <em>mode</em> has been set for the request</dd>
	<dt><code>Sec-Fetch-Site</code></dt>
	<dd>The <em>relationship</em> between the loaded page, if any, and the request</dd>
	<dt><code>Sec-Fetch-User</code></dt>
	<dd>Sent when the request was initiated by a <em>user action</em></dd>
</dl>
<p>
	This is a live demo page, it displays exactly the headers your browser has sent.
	Speaking of which, your browser has sent the following <strong>Fetch Metadata</strong> headers for some of the most common request types:
</p>
<h2><code>Sec-Fetch-*</code> request headers for this page</h2>
<p class="headers">
<?= headerHtml('Sec-Fetch-Dest'); ?><br>
<?= headerHtml('Sec-Fetch-Mode'); ?><br>
<?= headerHtml('Sec-Fetch-Site'); ?><br>
<?= headerHtml('Sec-Fetch-User'); ?><br>
<small><em>(This page was generated at <?= date('H:i:s'); ?>)</em></small>
</p>
Reload the page
<button id="reloadPage">now</button>
<button class="reloadInterval" data-after="4" data-click="reloadPage">after 4 secs</button>
<button class="reloadInterval" data-after="5" data-click="reloadPage">after 5 secs</button>
<p><em>
	Reloading the page is user-activated if it happens immediately or in less than 5 seconds,<br>
	click the buttons and watch the headers.
</em></p>

<h2><code>Sec-Fetch-*</code> request headers for an iframe</h2>
<iframe src="iframe.php" id="iframe" title="Sec-Fetch-* request headers for an iframe"></iframe><br>
Reload the iframe
<button id="reloadIframe">now</button>
<button class="reloadInterval" data-after="4" data-click="reloadIframe">after 4 secs</button>
<button class="reloadInterval" data-after="5" data-click="reloadIframe">after 5 secs</button>
<p><em>
	Reloading the iframe is user-activated if it happens immediately or in less than 5 seconds,<br>
	click the buttons and watch the <code>Sec-Fetch-User</code> header.
</em></p>

<h2><code>Sec-Fetch-*</code> request headers for a <code>&lt;script&gt;</code> tag</h2>
<p class="headers">
<code>Sec-Fetch-Dest</code>: <code id="destScript">&hellip;</code><em id="destScriptNote">&hellip;</em><br>
<code>Sec-Fetch-Mode</code>: <code id="modeScript">&hellip;</code><em id="modeScriptNote">&hellip;</em><br>
<code>Sec-Fetch-Site</code>: <code id="siteScript">&hellip;</code><em id="siteScriptNote">&hellip;</em><br>
<code>Sec-Fetch-User</code>: <code id="userScript">&hellip;</code><em id="userScriptNote">&hellip;</em><br>
</p>
<script src="script.php"></script>
<p>Headers sent when downloading a script with a <code>&lt;script src="&hellip;"&gt;&lt;/script&gt;</code> tag</p>

<h2><code>Sec-Fetch-*</code> request headers for an <code>&lt;img&gt;</code> tag</h2>
<img src="image.php" width="300" height="105" alt="Fetch metadata request headers for an image" id="image"><br>
<button class="reloadImage" data-id="image">Reload the image</button>
or <button class="openImage">Open the image</button>
<p><em>
	Reloading the image is not a <a href="https://fetch.spec.whatwg.org/#navigation-request">navigation request</a> and as such is not user-activated and will not send <code>Sec-Fetch-User</code>.
	Opening the image in a new tab will send different headers, notably the <code>Sec-Fetch-Dest</code> header will be <code>document</code>.
</em></p>

<h2><code>Sec-Fetch-*</code> request headers for an <code>&lt;embed&gt;</code> tag</h2>
<h3>Without a <code>type</code> attribute</h3>
<embed src="image.php" width="300" height="105" title="Fetch metadata request headers for an embed tag" id="embed"><br>
<button class="reloadImage" data-id="embed">Reload the image</button>
<p><em>
	The <code>embed</code> element sends a <a href="https://fetch.spec.whatwg.org/#navigation-request">navigation request</a> which means that <code>Sec-Fetch-Mode</code> is <code>navigate</code>
	and reloading the image will send <code>Sec-Fetch-User</code> in Chrome.
	Firefox will not send <code>Sec-Fetch-User</code> on reload, and will randomly change <code>Sec-Fetch-Dest</code> to <code>image</code> and <code>Sec-Fetch-Mode</code> to <code>no-cors</code> if you reload the whole page.
</em></p>

<h3>With <code>type="image/png"</code> attribute</h3>
<embed src="image.php" type="image/png" width="300" height="105" title="Fetch metadata request headers for an embed tag" id="embedType"><br>
<button class="reloadImage" data-id="embedType">Reload the image</button>
<p><em>
	If there's a <code>type</code> attribute in the <code>embed</code> tag, then Chrome will send the same headers as with <code>&lt;img&gt;</code>,
	but only on the first load. If you reload the image, then <code>Sec-Fetch-Dest</code> changes to <code>embed</code>.
	Firefox behaves the same way as it does when there's no <code>type</code> attribute.
</em></p>

<h2><code>Sec-Fetch-*</code> request headers for <code>fetch()</code></h2>
<p class="headers">
<code>Sec-Fetch-Dest</code>: <code id="destFetch">&hellip;</code><em id="destFetchNote">&hellip;</em><br>
<code>Sec-Fetch-Mode</code>: <code id="modeFetch">&hellip;</code><em id="modeFetchNote">&hellip;</em><br>
<code>Sec-Fetch-Site</code>: <code id="siteFetch">&hellip;</code><em id="siteFetchNote">&hellip;</em><br>
<code>Sec-Fetch-User</code>: <code id="userFetch">&hellip;</code><em id="userFetchNote">&hellip;</em><br>
<small><em>(Generated at <span id="atFetch">&hellip;</span>)</em></small>
</p>
<p><button id="fetchAgain">Fetch again</button></p>
<p><em>
	Fetching again will not set <code>Sec-Fetch-User</code> even when the <code>fetch()</code> was clearly triggered by you.
	This is because the header is delivered only for <a href="https://fetch.spec.whatwg.org/#navigation-request">navigation requests</a>
	whose destination in <code>Sec-Fetch-Dest</code> is <code>document</code>, <code>embed</code>, <code>frame</code>, <code>iframe</code>, or <code>object</code>,
	and this wasn't one.
</em></p>

<?= \Exploited\footerWithSourceLink('https://github.com/spaze/exploited.cz/tree/main/site/fetch-metadata'); ?>

<script>
document.querySelectorAll(".reloadInterval").forEach(function (item) {
	item.addEventListener("click", (event) => {
		const element = event.target;
		element.dataset.origText = element.innerText;
		element.innerText = element.dataset.after;
		element.disabled = true;
		const id = setInterval(() => {element.innerText = element.innerText - 1}, 1000);
		setTimeout(() => {
			clearInterval(id);
			document.getElementById(element.dataset.click).click();
			element.disabled = false;
			element.innerText = element.dataset.origText;
		}, element.dataset.after * 1000);
	});
});
document.getElementById("reloadIframe").addEventListener("click", () => {
	document.getElementById("iframe").contentWindow.location.reload();
});
document.getElementById("reloadPage").addEventListener("click", () => {
	document.location.reload();
});
document.querySelectorAll(".reloadImage").forEach((item) => {
	item.addEventListener("click", (event) => {
		const image = document.getElementById(event.target.dataset.id);
		const url = new URL(image.src, location);
		url.searchParams.set('r', Math.random());
		image.src = url;
	});
});
document.querySelectorAll(".openImage").forEach((item) => {
	item.addEventListener("click", () => {
		document.location = "image.php?r=<?= (new Randomizer())->getFloat(0, 1); ?>";
	});
});
const fetchHeaders = function() {
	fetch("fetch.php")
		.then((response) => {
			return response.json();
		})
		.then((json) => {
			document.getElementById('destFetch').innerText = json.dest.value;
			document.getElementById('destFetchNote').innerText = json.dest.note;
			document.getElementById('modeFetch').innerText = json.mode.value;
			document.getElementById('modeFetchNote').innerText = json.mode.note;
			document.getElementById('siteFetch').innerText = json.site.value;
			document.getElementById('siteFetchNote').innerText = json.site.note;
			document.getElementById('userFetch').innerText = json.user.value;
			document.getElementById('userFetchNote').innerText = json.user.note;
			document.getElementById('atFetch').innerText = json.at;
		});
};
fetchHeaders();
document.getElementById("fetchAgain").addEventListener("click", fetchHeaders);
</script>
</body>
</html>
